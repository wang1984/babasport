<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!--mybatis  sessionFactory配置 ;spring和MyBatis完美整合，不需要mybatis的配置映射文件-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 数据源 -->
		<property name="dataSource" ref="dataSource"/>
		<!--  mapperLocations：它表示我们的Mapper文件存放的位置。 -->
		<property name="mapperLocations" value="classpath:cn/itcast/core/dao/*.xml"/>
		
		<!--  typeAliasesPackage：它一般对应我们的实体类所在的包。
		                  那么在Mapper文件里面就可以直接写对应的类名 而不用写全路径名了 比如parameterType属性就直接写javabean的短类名即可
		-->
		<property name="typeAliasesPackage" value="cn.itcast.core.bean,cn.itcast.core.query"/>
	</bean> 
	
	<!-- 扫包  dao接口所在的包 
	自动扫描 将Mapper接口生成代理对象并注入到Spring中
	-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage"  value="cn.itcast.core.dao"/>
	</bean>
	
</beans>
